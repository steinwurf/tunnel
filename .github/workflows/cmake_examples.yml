name: CMake Examples
on:
  workflow_dispatch:
    inputs:
      extra_resolve_options:
        description: "Extra Resolve Options"
        required: false
  schedule:
    - cron: "0 1 * * *" # 3 AM CET
  push:
  pull_request:
env:
  EXTRA_RESOLVE_OPTIONS: ${{ github.event.inputs.resolve_options }}
jobs:
  # CMake build examples
  example_cmake_path:
    strategy:
      fail-fast: false
      matrix:
        os: [Linux]
    runs-on: [self-hosted, "${{ matrix.os }}", "builder", "cmake"]
    name: ${{ matrix.os }} CMake from Path
    env:
      cwd: "${{github.workspace}}/examples/cmake_path"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CMake Cleanup
        run: cmake -E remove_directory ${{env.cwd}}/build
      - name: CMake Setup
        run: cmake -E make_directory ${{env.cwd}}/build
      - name: CMake Configure
        env:
          GIT_SSH_COMMAND: "${{ runner.os != 'Linux' && 'ssh' || 'ssh -i /home/buildbot/.ssh/id_ed25519 -o IdentitiesOnly=yes' }}"
        working-directory: ${{env.cwd}}/build
        run: cmake ${{env.cwd}} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DSTEINWURF_RESOLVE_OPTIONS="--git_protocol=git@ $EXTRA_RESOLVE_OPTIONS"
      - name: CMake Build
        working-directory: ${{env.cwd}}/build
        run: cmake --build .
  # We need an environment that with a recent CMake that supports FetchContent
  # example_cmake_fetchcontent:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [Linux]
  #   runs-on: [self-hosted, "docker", "builder"]
  #   container:
  #     image: ubuntu:impish
  #     options: --user 0:0
  #     volumes:
  #       - /home/buildbot/.ssh:/root/.ssh
  #   name: ${{ matrix.os }} CMake FetchContent
  #   env:
  #     cwd: "${{github.workspace}}/examples/cmake_fetchcontent"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: CMake Cleanup
  #       run: cmake -E remove_directory ${{env.cwd}}/build
  #     - name: CMake Setup
  #       run: cmake -E make_directory ${{env.cwd}}/build
  #     - name: CMake Configure
  #       env:
  #         GIT_SSH_COMMAND: "${{ runner.os != 'Linux' && 'ssh' || 'ssh -i /home/buildbot/.ssh/id_ed25519 -o IdentitiesOnly=yes' }}"
  #       working-directory: ${{env.cwd}}/build
  #       run: cmake ${{env.cwd}} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DSTEINWURF_RESOLVE_OPTIONS="--git_protocol=git@ $EXTRA_RESOLVE_OPTIONS"
  #     - name: CMake Build
  #       working-directory: ${{env.cwd}}/build
  #       run: cmake --build .
